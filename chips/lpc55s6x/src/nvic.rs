
use kernel::utilities::StaticRef;
use kernel::utilities::registers::{self, register_bitfields, register_structs, ReadOnly, ReadWrite, WriteOnly};
    
register_structs! {
    /// no description available
    NvicRegisters {
        /// Interrupt Set Enable Register
        (0x000 => iser_0: ReadWrite<u32, ISER[0]::Register>),
        /// Interrupt Set Enable Register
        (0x004 => iser_1: ReadWrite<u32, ISER[1]::Register>),
        /// Interrupt Set Enable Register
        (0x008 => iser_2: ReadWrite<u32, ISER[2]::Register>),
        /// Interrupt Set Enable Register
        (0x00C => iser_3: ReadWrite<u32, ISER[3]::Register>),
        /// Interrupt Set Enable Register
        (0x010 => iser_4: ReadWrite<u32, ISER[4]::Register>),
        /// Interrupt Set Enable Register
        (0x014 => iser_5: ReadWrite<u32, ISER[5]::Register>),
        /// Interrupt Set Enable Register
        (0x018 => iser_6: ReadWrite<u32, ISER[6]::Register>),
        /// Interrupt Set Enable Register
        (0x01C => iser_7: ReadWrite<u32, ISER[7]::Register>),
        /// Interrupt Set Enable Register
        (0x020 => iser_8: ReadWrite<u32, ISER[8]::Register>),
        /// Interrupt Set Enable Register
        (0x024 => iser_9: ReadWrite<u32, ISER[9]::Register>),
        /// Interrupt Set Enable Register
        (0x028 => iser_10: ReadWrite<u32, ISER[10]::Register>),
        /// Interrupt Set Enable Register
        (0x02C => iser_11: ReadWrite<u32, ISER[11]::Register>),
        /// Interrupt Set Enable Register
        (0x030 => iser_12: ReadWrite<u32, ISER[12]::Register>),
        /// Interrupt Set Enable Register
        (0x034 => iser_13: ReadWrite<u32, ISER[13]::Register>),
        /// Interrupt Set Enable Register
        (0x038 => iser_14: ReadWrite<u32, ISER[14]::Register>),
        /// Interrupt Set Enable Register
        (0x03C => iser_15: ReadWrite<u32, ISER[15]::Register>),
        (0x040 => _reserved0),
        /// Interrupt Clear Enable Register
        (0x080 => icer_0: ReadWrite<u32, ICER[0]::Register>),
        /// Interrupt Clear Enable Register
        (0x084 => icer_1: ReadWrite<u32, ICER[1]::Register>),
        /// Interrupt Clear Enable Register
        (0x088 => icer_2: ReadWrite<u32, ICER[2]::Register>),
        /// Interrupt Clear Enable Register
        (0x08C => icer_3: ReadWrite<u32, ICER[3]::Register>),
        /// Interrupt Clear Enable Register
        (0x090 => icer_4: ReadWrite<u32, ICER[4]::Register>),
        /// Interrupt Clear Enable Register
        (0x094 => icer_5: ReadWrite<u32, ICER[5]::Register>),
        /// Interrupt Clear Enable Register
        (0x098 => icer_6: ReadWrite<u32, ICER[6]::Register>),
        /// Interrupt Clear Enable Register
        (0x09C => icer_7: ReadWrite<u32, ICER[7]::Register>),
        /// Interrupt Clear Enable Register
        (0x0A0 => icer_8: ReadWrite<u32, ICER[8]::Register>),
        /// Interrupt Clear Enable Register
        (0x0A4 => icer_9: ReadWrite<u32, ICER[9]::Register>),
        /// Interrupt Clear Enable Register
        (0x0A8 => icer_10: ReadWrite<u32, ICER[10]::Register>),
        /// Interrupt Clear Enable Register
        (0x0AC => icer_11: ReadWrite<u32, ICER[11]::Register>),
        /// Interrupt Clear Enable Register
        (0x0B0 => icer_12: ReadWrite<u32, ICER[12]::Register>),
        /// Interrupt Clear Enable Register
        (0x0B4 => icer_13: ReadWrite<u32, ICER[13]::Register>),
        /// Interrupt Clear Enable Register
        (0x0B8 => icer_14: ReadWrite<u32, ICER[14]::Register>),
        /// Interrupt Clear Enable Register
        (0x0BC => icer_15: ReadWrite<u32, ICER[15]::Register>),
        (0x0C0 => _reserved1),
        /// Interrupt Set Pending Register
        (0x100 => ispr_0: ReadWrite<u32, ISPR[0]::Register>),
        /// Interrupt Set Pending Register
        (0x104 => ispr_1: ReadWrite<u32, ISPR[1]::Register>),
        /// Interrupt Set Pending Register
        (0x108 => ispr_2: ReadWrite<u32, ISPR[2]::Register>),
        /// Interrupt Set Pending Register
        (0x10C => ispr_3: ReadWrite<u32, ISPR[3]::Register>),
        /// Interrupt Set Pending Register
        (0x110 => ispr_4: ReadWrite<u32, ISPR[4]::Register>),
        /// Interrupt Set Pending Register
        (0x114 => ispr_5: ReadWrite<u32, ISPR[5]::Register>),
        /// Interrupt Set Pending Register
        (0x118 => ispr_6: ReadWrite<u32, ISPR[6]::Register>),
        /// Interrupt Set Pending Register
        (0x11C => ispr_7: ReadWrite<u32, ISPR[7]::Register>),
        /// Interrupt Set Pending Register
        (0x120 => ispr_8: ReadWrite<u32, ISPR[8]::Register>),
        /// Interrupt Set Pending Register
        (0x124 => ispr_9: ReadWrite<u32, ISPR[9]::Register>),
        /// Interrupt Set Pending Register
        (0x128 => ispr_10: ReadWrite<u32, ISPR[10]::Register>),
        /// Interrupt Set Pending Register
        (0x12C => ispr_11: ReadWrite<u32, ISPR[11]::Register>),
        /// Interrupt Set Pending Register
        (0x130 => ispr_12: ReadWrite<u32, ISPR[12]::Register>),
        /// Interrupt Set Pending Register
        (0x134 => ispr_13: ReadWrite<u32, ISPR[13]::Register>),
        /// Interrupt Set Pending Register
        (0x138 => ispr_14: ReadWrite<u32, ISPR[14]::Register>),
        /// Interrupt Set Pending Register
        (0x13C => ispr_15: ReadWrite<u32, ISPR[15]::Register>),
        (0x140 => _reserved2),
        /// Interrupt Clear Pending Register
        (0x180 => icpr_0: ReadWrite<u32, ICPR[0]::Register>),
        /// Interrupt Clear Pending Register
        (0x184 => icpr_1: ReadWrite<u32, ICPR[1]::Register>),
        /// Interrupt Clear Pending Register
        (0x188 => icpr_2: ReadWrite<u32, ICPR[2]::Register>),
        /// Interrupt Clear Pending Register
        (0x18C => icpr_3: ReadWrite<u32, ICPR[3]::Register>),
        /// Interrupt Clear Pending Register
        (0x190 => icpr_4: ReadWrite<u32, ICPR[4]::Register>),
        /// Interrupt Clear Pending Register
        (0x194 => icpr_5: ReadWrite<u32, ICPR[5]::Register>),
        /// Interrupt Clear Pending Register
        (0x198 => icpr_6: ReadWrite<u32, ICPR[6]::Register>),
        /// Interrupt Clear Pending Register
        (0x19C => icpr_7: ReadWrite<u32, ICPR[7]::Register>),
        /// Interrupt Clear Pending Register
        (0x1A0 => icpr_8: ReadWrite<u32, ICPR[8]::Register>),
        /// Interrupt Clear Pending Register
        (0x1A4 => icpr_9: ReadWrite<u32, ICPR[9]::Register>),
        /// Interrupt Clear Pending Register
        (0x1A8 => icpr_10: ReadWrite<u32, ICPR[10]::Register>),
        /// Interrupt Clear Pending Register
        (0x1AC => icpr_11: ReadWrite<u32, ICPR[11]::Register>),
        /// Interrupt Clear Pending Register
        (0x1B0 => icpr_12: ReadWrite<u32, ICPR[12]::Register>),
        /// Interrupt Clear Pending Register
        (0x1B4 => icpr_13: ReadWrite<u32, ICPR[13]::Register>),
        /// Interrupt Clear Pending Register
        (0x1B8 => icpr_14: ReadWrite<u32, ICPR[14]::Register>),
        /// Interrupt Clear Pending Register
        (0x1BC => icpr_15: ReadWrite<u32, ICPR[15]::Register>),
        (0x1C0 => _reserved3),
        /// Interrupt Active Bit Register
        (0x200 => iabr_0: ReadWrite<u32, IABR[0]::Register>),
        /// Interrupt Active Bit Register
        (0x204 => iabr_1: ReadWrite<u32, IABR[1]::Register>),
        /// Interrupt Active Bit Register
        (0x208 => iabr_2: ReadWrite<u32, IABR[2]::Register>),
        /// Interrupt Active Bit Register
        (0x20C => iabr_3: ReadWrite<u32, IABR[3]::Register>),
        /// Interrupt Active Bit Register
        (0x210 => iabr_4: ReadWrite<u32, IABR[4]::Register>),
        /// Interrupt Active Bit Register
        (0x214 => iabr_5: ReadWrite<u32, IABR[5]::Register>),
        /// Interrupt Active Bit Register
        (0x218 => iabr_6: ReadWrite<u32, IABR[6]::Register>),
        /// Interrupt Active Bit Register
        (0x21C => iabr_7: ReadWrite<u32, IABR[7]::Register>),
        /// Interrupt Active Bit Register
        (0x220 => iabr_8: ReadWrite<u32, IABR[8]::Register>),
        /// Interrupt Active Bit Register
        (0x224 => iabr_9: ReadWrite<u32, IABR[9]::Register>),
        /// Interrupt Active Bit Register
        (0x228 => iabr_10: ReadWrite<u32, IABR[10]::Register>),
        /// Interrupt Active Bit Register
        (0x22C => iabr_11: ReadWrite<u32, IABR[11]::Register>),
        /// Interrupt Active Bit Register
        (0x230 => iabr_12: ReadWrite<u32, IABR[12]::Register>),
        /// Interrupt Active Bit Register
        (0x234 => iabr_13: ReadWrite<u32, IABR[13]::Register>),
        /// Interrupt Active Bit Register
        (0x238 => iabr_14: ReadWrite<u32, IABR[14]::Register>),
        /// Interrupt Active Bit Register
        (0x23C => iabr_15: ReadWrite<u32, IABR[15]::Register>),
        (0x240 => _reserved4),
        /// Interrupt Target Non-secure Register
        (0x280 => itns_0: ReadWrite<u32, ITNS[0]::Register>),
        /// Interrupt Target Non-secure Register
        (0x284 => itns_1: ReadWrite<u32, ITNS[1]::Register>),
        /// Interrupt Target Non-secure Register
        (0x288 => itns_2: ReadWrite<u32, ITNS[2]::Register>),
        /// Interrupt Target Non-secure Register
        (0x28C => itns_3: ReadWrite<u32, ITNS[3]::Register>),
        /// Interrupt Target Non-secure Register
        (0x290 => itns_4: ReadWrite<u32, ITNS[4]::Register>),
        /// Interrupt Target Non-secure Register
        (0x294 => itns_5: ReadWrite<u32, ITNS[5]::Register>),
        /// Interrupt Target Non-secure Register
        (0x298 => itns_6: ReadWrite<u32, ITNS[6]::Register>),
        /// Interrupt Target Non-secure Register
        (0x29C => itns_7: ReadWrite<u32, ITNS[7]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2A0 => itns_8: ReadWrite<u32, ITNS[8]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2A4 => itns_9: ReadWrite<u32, ITNS[9]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2A8 => itns_10: ReadWrite<u32, ITNS[10]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2AC => itns_11: ReadWrite<u32, ITNS[11]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2B0 => itns_12: ReadWrite<u32, ITNS[12]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2B4 => itns_13: ReadWrite<u32, ITNS[13]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2B8 => itns_14: ReadWrite<u32, ITNS[14]::Register>),
        /// Interrupt Target Non-secure Register
        (0x2BC => itns_15: ReadWrite<u32, ITNS[15]::Register>),
        (0x2C0 => _reserved5),
        /// Interrupt Priority Register
        (0x300 => ipr_0: ReadWrite<u32, IPR[0]::Register>),
        /// Interrupt Priority Register
        (0x304 => ipr_1: ReadWrite<u32, IPR[1]::Register>),
        /// Interrupt Priority Register
        (0x308 => ipr_2: ReadWrite<u32, IPR[2]::Register>),
        /// Interrupt Priority Register
        (0x30C => ipr_3: ReadWrite<u32, IPR[3]::Register>),
        /// Interrupt Priority Register
        (0x310 => ipr_4: ReadWrite<u32, IPR[4]::Register>),
        /// Interrupt Priority Register
        (0x314 => ipr_5: ReadWrite<u32, IPR[5]::Register>),
        /// Interrupt Priority Register
        (0x318 => ipr_6: ReadWrite<u32, IPR[6]::Register>),
        /// Interrupt Priority Register
        (0x31C => ipr_7: ReadWrite<u32, IPR[7]::Register>),
        /// Interrupt Priority Register
        (0x320 => ipr_8: ReadWrite<u32, IPR[8]::Register>),
        /// Interrupt Priority Register
        (0x324 => ipr_9: ReadWrite<u32, IPR[9]::Register>),
        /// Interrupt Priority Register
        (0x328 => ipr_10: ReadWrite<u32, IPR[10]::Register>),
        /// Interrupt Priority Register
        (0x32C => ipr_11: ReadWrite<u32, IPR[11]::Register>),
        /// Interrupt Priority Register
        (0x330 => ipr_12: ReadWrite<u32, IPR[12]::Register>),
        /// Interrupt Priority Register
        (0x334 => ipr_13: ReadWrite<u32, IPR[13]::Register>),
        /// Interrupt Priority Register
        (0x338 => ipr_14: ReadWrite<u32, IPR[14]::Register>),
        /// Interrupt Priority Register
        (0x33C => ipr_15: ReadWrite<u32, IPR[15]::Register>),
        /// Interrupt Priority Register
        (0x340 => ipr_16: ReadWrite<u32, IPR[16]::Register>),
        /// Interrupt Priority Register
        (0x344 => ipr_17: ReadWrite<u32, IPR[17]::Register>),
        /// Interrupt Priority Register
        (0x348 => ipr_18: ReadWrite<u32, IPR[18]::Register>),
        /// Interrupt Priority Register
        (0x34C => ipr_19: ReadWrite<u32, IPR[19]::Register>),
        /// Interrupt Priority Register
        (0x350 => ipr_20: ReadWrite<u32, IPR[20]::Register>),
        /// Interrupt Priority Register
        (0x354 => ipr_21: ReadWrite<u32, IPR[21]::Register>),
        /// Interrupt Priority Register
        (0x358 => ipr_22: ReadWrite<u32, IPR[22]::Register>),
        /// Interrupt Priority Register
        (0x35C => ipr_23: ReadWrite<u32, IPR[23]::Register>),
        /// Interrupt Priority Register
        (0x360 => ipr_24: ReadWrite<u32, IPR[24]::Register>),
        /// Interrupt Priority Register
        (0x364 => ipr_25: ReadWrite<u32, IPR[25]::Register>),
        /// Interrupt Priority Register
        (0x368 => ipr_26: ReadWrite<u32, IPR[26]::Register>),
        /// Interrupt Priority Register
        (0x36C => ipr_27: ReadWrite<u32, IPR[27]::Register>),
        /// Interrupt Priority Register
        (0x370 => ipr_28: ReadWrite<u32, IPR[28]::Register>),
        /// Interrupt Priority Register
        (0x374 => ipr_29: ReadWrite<u32, IPR[29]::Register>),
        /// Interrupt Priority Register
        (0x378 => ipr_30: ReadWrite<u32, IPR[30]::Register>),
        /// Interrupt Priority Register
        (0x37C => ipr_31: ReadWrite<u32, IPR[31]::Register>),
        /// Interrupt Priority Register
        (0x380 => ipr_32: ReadWrite<u32, IPR[32]::Register>),
        /// Interrupt Priority Register
        (0x384 => ipr_33: ReadWrite<u32, IPR[33]::Register>),
        /// Interrupt Priority Register
        (0x388 => ipr_34: ReadWrite<u32, IPR[34]::Register>),
        /// Interrupt Priority Register
        (0x38C => ipr_35: ReadWrite<u32, IPR[35]::Register>),
        /// Interrupt Priority Register
        (0x390 => ipr_36: ReadWrite<u32, IPR[36]::Register>),
        /// Interrupt Priority Register
        (0x394 => ipr_37: ReadWrite<u32, IPR[37]::Register>),
        /// Interrupt Priority Register
        (0x398 => ipr_38: ReadWrite<u32, IPR[38]::Register>),
        /// Interrupt Priority Register
        (0x39C => ipr_39: ReadWrite<u32, IPR[39]::Register>),
        /// Interrupt Priority Register
        (0x3A0 => ipr_40: ReadWrite<u32, IPR[40]::Register>),
        /// Interrupt Priority Register
        (0x3A4 => ipr_41: ReadWrite<u32, IPR[41]::Register>),
        /// Interrupt Priority Register
        (0x3A8 => ipr_42: ReadWrite<u32, IPR[42]::Register>),
        /// Interrupt Priority Register
        (0x3AC => ipr_43: ReadWrite<u32, IPR[43]::Register>),
        /// Interrupt Priority Register
        (0x3B0 => ipr_44: ReadWrite<u32, IPR[44]::Register>),
        /// Interrupt Priority Register
        (0x3B4 => ipr_45: ReadWrite<u32, IPR[45]::Register>),
        /// Interrupt Priority Register
        (0x3B8 => ipr_46: ReadWrite<u32, IPR[46]::Register>),
        /// Interrupt Priority Register
        (0x3BC => ipr_47: ReadWrite<u32, IPR[47]::Register>),
        /// Interrupt Priority Register
        (0x3C0 => ipr_48: ReadWrite<u32, IPR[48]::Register>),
        /// Interrupt Priority Register
        (0x3C4 => ipr_49: ReadWrite<u32, IPR[49]::Register>),
        /// Interrupt Priority Register
        (0x3C8 => ipr_50: ReadWrite<u32, IPR[50]::Register>),
        /// Interrupt Priority Register
        (0x3CC => ipr_51: ReadWrite<u32, IPR[51]::Register>),
        /// Interrupt Priority Register
        (0x3D0 => ipr_52: ReadWrite<u32, IPR[52]::Register>),
        /// Interrupt Priority Register
        (0x3D4 => ipr_53: ReadWrite<u32, IPR[53]::Register>),
        /// Interrupt Priority Register
        (0x3D8 => ipr_54: ReadWrite<u32, IPR[54]::Register>),
        /// Interrupt Priority Register
        (0x3DC => ipr_55: ReadWrite<u32, IPR[55]::Register>),
        /// Interrupt Priority Register
        (0x3E0 => ipr_56: ReadWrite<u32, IPR[56]::Register>),
        /// Interrupt Priority Register
        (0x3E4 => ipr_57: ReadWrite<u32, IPR[57]::Register>),
        /// Interrupt Priority Register
        (0x3E8 => ipr_58: ReadWrite<u32, IPR[58]::Register>),
        /// Interrupt Priority Register
        (0x3EC => ipr_59: ReadWrite<u32, IPR[59]::Register>),
        /// Interrupt Priority Register
        (0x3F0 => ipr_60: ReadWrite<u32, IPR[60]::Register>),
        /// Interrupt Priority Register
        (0x3F4 => ipr_61: ReadWrite<u32, IPR[61]::Register>),
        /// Interrupt Priority Register
        (0x3F8 => ipr_62: ReadWrite<u32, IPR[62]::Register>),
        /// Interrupt Priority Register
        (0x3FC => ipr_63: ReadWrite<u32, IPR[63]::Register>),
        /// Interrupt Priority Register
        (0x400 => ipr_64: ReadWrite<u32, IPR[64]::Register>),
        /// Interrupt Priority Register
        (0x404 => ipr_65: ReadWrite<u32, IPR[65]::Register>),
        /// Interrupt Priority Register
        (0x408 => ipr_66: ReadWrite<u32, IPR[66]::Register>),
        /// Interrupt Priority Register
        (0x40C => ipr_67: ReadWrite<u32, IPR[67]::Register>),
        /// Interrupt Priority Register
        (0x410 => ipr_68: ReadWrite<u32, IPR[68]::Register>),
        /// Interrupt Priority Register
        (0x414 => ipr_69: ReadWrite<u32, IPR[69]::Register>),
        /// Interrupt Priority Register
        (0x418 => ipr_70: ReadWrite<u32, IPR[70]::Register>),
        /// Interrupt Priority Register
        (0x41C => ipr_71: ReadWrite<u32, IPR[71]::Register>),
        /// Interrupt Priority Register
        (0x420 => ipr_72: ReadWrite<u32, IPR[72]::Register>),
        /// Interrupt Priority Register
        (0x424 => ipr_73: ReadWrite<u32, IPR[73]::Register>),
        /// Interrupt Priority Register
        (0x428 => ipr_74: ReadWrite<u32, IPR[74]::Register>),
        /// Interrupt Priority Register
        (0x42C => ipr_75: ReadWrite<u32, IPR[75]::Register>),
        /// Interrupt Priority Register
        (0x430 => ipr_76: ReadWrite<u32, IPR[76]::Register>),
        /// Interrupt Priority Register
        (0x434 => ipr_77: ReadWrite<u32, IPR[77]::Register>),
        /// Interrupt Priority Register
        (0x438 => ipr_78: ReadWrite<u32, IPR[78]::Register>),
        /// Interrupt Priority Register
        (0x43C => ipr_79: ReadWrite<u32, IPR[79]::Register>),
        /// Interrupt Priority Register
        (0x440 => ipr_80: ReadWrite<u32, IPR[80]::Register>),
        /// Interrupt Priority Register
        (0x444 => ipr_81: ReadWrite<u32, IPR[81]::Register>),
        /// Interrupt Priority Register
        (0x448 => ipr_82: ReadWrite<u32, IPR[82]::Register>),
        /// Interrupt Priority Register
        (0x44C => ipr_83: ReadWrite<u32, IPR[83]::Register>),
        /// Interrupt Priority Register
        (0x450 => ipr_84: ReadWrite<u32, IPR[84]::Register>),
        /// Interrupt Priority Register
        (0x454 => ipr_85: ReadWrite<u32, IPR[85]::Register>),
        /// Interrupt Priority Register
        (0x458 => ipr_86: ReadWrite<u32, IPR[86]::Register>),
        /// Interrupt Priority Register
        (0x45C => ipr_87: ReadWrite<u32, IPR[87]::Register>),
        /// Interrupt Priority Register
        (0x460 => ipr_88: ReadWrite<u32, IPR[88]::Register>),
        /// Interrupt Priority Register
        (0x464 => ipr_89: ReadWrite<u32, IPR[89]::Register>),
        /// Interrupt Priority Register
        (0x468 => ipr_90: ReadWrite<u32, IPR[90]::Register>),
        /// Interrupt Priority Register
        (0x46C => ipr_91: ReadWrite<u32, IPR[91]::Register>),
        /// Interrupt Priority Register
        (0x470 => ipr_92: ReadWrite<u32, IPR[92]::Register>),
        /// Interrupt Priority Register
        (0x474 => ipr_93: ReadWrite<u32, IPR[93]::Register>),
        /// Interrupt Priority Register
        (0x478 => ipr_94: ReadWrite<u32, IPR[94]::Register>),
        /// Interrupt Priority Register
        (0x47C => ipr_95: ReadWrite<u32, IPR[95]::Register>),
        /// Interrupt Priority Register
        (0x480 => ipr_96: ReadWrite<u32, IPR[96]::Register>),
        /// Interrupt Priority Register
        (0x484 => ipr_97: ReadWrite<u32, IPR[97]::Register>),
        /// Interrupt Priority Register
        (0x488 => ipr_98: ReadWrite<u32, IPR[98]::Register>),
        /// Interrupt Priority Register
        (0x48C => ipr_99: ReadWrite<u32, IPR[99]::Register>),
        /// Interrupt Priority Register
        (0x490 => ipr_100: ReadWrite<u32, IPR[100]::Register>),
        /// Interrupt Priority Register
        (0x494 => ipr_101: ReadWrite<u32, IPR[101]::Register>),
        /// Interrupt Priority Register
        (0x498 => ipr_102: ReadWrite<u32, IPR[102]::Register>),
        /// Interrupt Priority Register
        (0x49C => ipr_103: ReadWrite<u32, IPR[103]::Register>),
        /// Interrupt Priority Register
        (0x4A0 => ipr_104: ReadWrite<u32, IPR[104]::Register>),
        /// Interrupt Priority Register
        (0x4A4 => ipr_105: ReadWrite<u32, IPR[105]::Register>),
        /// Interrupt Priority Register
        (0x4A8 => ipr_106: ReadWrite<u32, IPR[106]::Register>),
        /// Interrupt Priority Register
        (0x4AC => ipr_107: ReadWrite<u32, IPR[107]::Register>),
        /// Interrupt Priority Register
        (0x4B0 => ipr_108: ReadWrite<u32, IPR[108]::Register>),
        /// Interrupt Priority Register
        (0x4B4 => ipr_109: ReadWrite<u32, IPR[109]::Register>),
        /// Interrupt Priority Register
        (0x4B8 => ipr_110: ReadWrite<u32, IPR[110]::Register>),
        /// Interrupt Priority Register
        (0x4BC => ipr_111: ReadWrite<u32, IPR[111]::Register>),
        /// Interrupt Priority Register
        (0x4C0 => ipr_112: ReadWrite<u32, IPR[112]::Register>),
        /// Interrupt Priority Register
        (0x4C4 => ipr_113: ReadWrite<u32, IPR[113]::Register>),
        /// Interrupt Priority Register
        (0x4C8 => ipr_114: ReadWrite<u32, IPR[114]::Register>),
        /// Interrupt Priority Register
        (0x4CC => ipr_115: ReadWrite<u32, IPR[115]::Register>),
        /// Interrupt Priority Register
        (0x4D0 => ipr_116: ReadWrite<u32, IPR[116]::Register>),
        /// Interrupt Priority Register
        (0x4D4 => ipr_117: ReadWrite<u32, IPR[117]::Register>),
        /// Interrupt Priority Register
        (0x4D8 => ipr_118: ReadWrite<u32, IPR[118]::Register>),
        /// Interrupt Priority Register
        (0x4DC => ipr_119: ReadWrite<u32, IPR[119]::Register>),
        (0x4E0 => _reserved6),
        /// Software Trigger Interrupt Register
        (0xE00 => stir: WriteOnly<u32>),
        (0xE04 => @END),
    }
}
register_bitfields![u32,
STIR [
    /// Interrupt ID of the interrupt to trigger, in the range 0-479.
    INTID OFFSET(0) NUMBITS(9) []
],
ISER[0] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[1] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[2] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[3] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[4] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[5] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[6] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[7] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[8] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[9] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[10] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[11] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[12] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[13] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[14] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISER[15] [
    /// Interrupt set-enable bits.
    SETENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt set-enable bits.
    SETENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[0] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[1] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[2] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[3] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[4] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[5] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[6] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[7] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[8] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[9] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[10] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[11] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[12] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[13] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[14] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ICER[15] [
    /// Interrupt clear-enable bits.
    CLRENA0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ],
    /// Interrupt clear-enable bits.
    CLRENA31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m disabled
        WriteNoEffectReadInterrupt32nMDisabled = 0,
        /// Write: Enable interrupt 32n+m; Read: Interrupt 32n+m enabled
        WriteEnableInterrupt32nMReadInterrupt32nMEnabled = 1
    ]
],
ISPR[0] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[1] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[2] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[3] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[4] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[5] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[6] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[7] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[8] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[9] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[10] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[11] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[12] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[13] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[14] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ISPR[15] [
    /// Interrupt set-pending bits.
    SETPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ],
    /// Interrupt set-pending bits.
    SETPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Pend interrupt 32n+m; Read: Interrupt 32n+m pending
        WritePendInterrupt32nMReadInterrupt32nMPending = 1
    ]
],
ICPR[0] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[1] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[2] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[3] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[4] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[5] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[6] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[7] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[8] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[9] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[10] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[11] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[12] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[13] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[14] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
ICPR[15] [
    /// Interrupt clear-pending bits.
    CLRPEND0 OFFSET(0) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND1 OFFSET(1) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND2 OFFSET(2) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND3 OFFSET(3) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND4 OFFSET(4) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND5 OFFSET(5) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND6 OFFSET(6) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND7 OFFSET(7) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND8 OFFSET(8) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND9 OFFSET(9) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND10 OFFSET(10) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND11 OFFSET(11) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND12 OFFSET(12) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND13 OFFSET(13) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND14 OFFSET(14) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND15 OFFSET(15) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND16 OFFSET(16) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND17 OFFSET(17) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND18 OFFSET(18) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND19 OFFSET(19) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND20 OFFSET(20) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND21 OFFSET(21) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND22 OFFSET(22) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND23 OFFSET(23) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND24 OFFSET(24) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND25 OFFSET(25) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND26 OFFSET(26) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND27 OFFSET(27) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND28 OFFSET(28) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND29 OFFSET(29) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND30 OFFSET(30) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ],
    /// Interrupt clear-pending bits.
    CLRPEND31 OFFSET(31) NUMBITS(1) [
        /// Write: No effect; Read: Interrupt 32n+m is not pending
        WriteNoEffectReadInterrupt32nMIsNotPending = 0,
        /// Write: Clear pending state of interrupt 32n+m; Read: Interrupt 32n+m is pending
        WriteClearPendingStateOfInterrupt32nMReadInterrupt32nMIsPending = 1
    ]
],
IABR[0] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[1] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[2] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[3] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[4] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[5] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[6] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[7] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[8] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[9] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[10] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[11] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[12] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[13] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[14] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
IABR[15] [
    /// Active state bits.
    ACTIVE0 OFFSET(0) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE1 OFFSET(1) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE2 OFFSET(2) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE3 OFFSET(3) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE4 OFFSET(4) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE5 OFFSET(5) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE6 OFFSET(6) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE7 OFFSET(7) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE8 OFFSET(8) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE9 OFFSET(9) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE10 OFFSET(10) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE11 OFFSET(11) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE12 OFFSET(12) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE13 OFFSET(13) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE14 OFFSET(14) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE15 OFFSET(15) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE16 OFFSET(16) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE17 OFFSET(17) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE18 OFFSET(18) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE19 OFFSET(19) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE20 OFFSET(20) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE21 OFFSET(21) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE22 OFFSET(22) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE23 OFFSET(23) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE24 OFFSET(24) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE25 OFFSET(25) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE26 OFFSET(26) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE27 OFFSET(27) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE28 OFFSET(28) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE29 OFFSET(29) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE30 OFFSET(30) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ],
    /// Active state bits.
    ACTIVE31 OFFSET(31) NUMBITS(1) [
        /// The interrupt is not active.
        TheInterruptIsNotActive = 0,
        /// The interrupt is active.
        TheInterruptIsActive = 1
    ]
],
ITNS[0] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[1] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[2] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[3] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[4] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[5] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[6] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[7] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[8] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[9] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[10] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[11] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[12] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[13] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[14] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
ITNS[15] [
    /// Interrupt Targets Non-secure bits.
    INTS0 OFFSET(0) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS1 OFFSET(1) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS2 OFFSET(2) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS3 OFFSET(3) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS4 OFFSET(4) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS5 OFFSET(5) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS6 OFFSET(6) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS7 OFFSET(7) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS8 OFFSET(8) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS9 OFFSET(9) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS10 OFFSET(10) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS11 OFFSET(11) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS12 OFFSET(12) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS13 OFFSET(13) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS14 OFFSET(14) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS15 OFFSET(15) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS16 OFFSET(16) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS17 OFFSET(17) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS18 OFFSET(18) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS19 OFFSET(19) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS20 OFFSET(20) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS21 OFFSET(21) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS22 OFFSET(22) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS23 OFFSET(23) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS24 OFFSET(24) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS25 OFFSET(25) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS26 OFFSET(26) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS27 OFFSET(27) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS28 OFFSET(28) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS29 OFFSET(29) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS30 OFFSET(30) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ],
    /// Interrupt Targets Non-secure bits.
    INTS31 OFFSET(31) NUMBITS(1) [
        /// The interrupt targets Secure state.
        TheInterruptTargetsSecureState = 0,
        /// The interrupt targets Non-secure state.
        TheInterruptTargetsNonSecureState = 1
    ]
],
IPR[0] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[1] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[2] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[3] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[4] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[5] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[6] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[7] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[8] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[9] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[10] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[11] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[12] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[13] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[14] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[15] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[16] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[17] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[18] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[19] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[20] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[21] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[22] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[23] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[24] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[25] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[26] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[27] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[28] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[29] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[30] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[31] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[32] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[33] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[34] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[35] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[36] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[37] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[38] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[39] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[40] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[41] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[42] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[43] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[44] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[45] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[46] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[47] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[48] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[49] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[50] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[51] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[52] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[53] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[54] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[55] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[56] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[57] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[58] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[59] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[60] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[61] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[62] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[63] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[64] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[65] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[66] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[67] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[68] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[69] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[70] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[71] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[72] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[73] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[74] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[75] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[76] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[77] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[78] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[79] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[80] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[81] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[82] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[83] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[84] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[85] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[86] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[87] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[88] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[89] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[90] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[91] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[92] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[93] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[94] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[95] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[96] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[97] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[98] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[99] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[100] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[101] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[102] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[103] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[104] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[105] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[106] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[107] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[108] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[109] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[110] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[111] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[112] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[113] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[114] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[115] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[116] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[117] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[118] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
],
IPR[119] [
    /// no description available
    PRI_0 OFFSET(0) NUMBITS(8) [],
    /// no description available
    PRI_1 OFFSET(8) NUMBITS(8) [],
    /// no description available
    PRI_2 OFFSET(16) NUMBITS(8) [],
    /// no description available
    PRI_3 OFFSET(24) NUMBITS(8) []
]
];
const NVIC_BASE: StaticRef<NvicRegisters> =
    unsafe { StaticRef::new(0xE000E100 as *const NvicRegisters) };
